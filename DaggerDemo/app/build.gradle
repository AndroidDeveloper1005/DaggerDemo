apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding{
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$materialVersion"
    implementation "com.google.android.material:material:$materialVersion"

    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    //networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    //kotlin coroutine
    implementation "androidx.core:core-ktx:$coreKtx"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutine"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelKtx"
    implementation "android.arch.lifecycle:extensions:$extension"

    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"

    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.google.firebase:firebase-perf:$firebasePerformance"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefresh"

    // Dagger2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"


    // Dependencies for local unit tests
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutine"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutine"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
}
